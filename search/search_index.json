{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#brief-introduction","title":"Brief Introduction","text":"<p>Hello, My name is Shon and this is my individual website for the stepper motor subsystem. I use SPI to communicate over a daisy chain network to recieve and send values over UART. My system has four main components: The Stepper Motor, Motor Driver, PIC Micontroller, and the 3.3V Switching Regulator. The goal of the motor subsystem is to rotate the solar panel based off the message it recieves from the daisy chain network. In return, it will rotate the solar panel based on the direction of the sun so the panel can produce energy at its peak.</p>"},{"location":"#milestones","title":"Milestones","text":"Assignments Dates Block Diagram 1/31 Component Selection &amp; PIC Table 2/7 Schematic Design 2/21 Power Budget 2/21 External Design Review 2/24 BOM &amp; Hardware Orders TBD Subsystem PCB Design TBD Individual API Documentation TBD Subsystem Hardware Verification TBD Software Implementation TBD Innovation Showcase 5/2 <p>Team Website</p>"},{"location":"BOM/","title":"BOM","text":""},{"location":"BOM/#bill-of-materials","title":"Bill of Materials","text":""},{"location":"Block%20Diagram/","title":"Block Diagram","text":""},{"location":"Block%20Diagram/#motor-subsystem-for-daisy-chain-network","title":"Motor Subsystem for Daisy Chain Network","text":"<p> \"I will either take 12V from the daisy chain or from the power supply to power the daisy chain, making the power supply fully modular in case of emergencies.\"</p>"},{"location":"Component%20Selection/","title":"Component Selection","text":""},{"location":"Component%20Selection/#role-and-responsibilities","title":"Role and Responsibilities","text":"<p>I am responsible for the actuator and using a PIC. This will be done using a stepper motor to control the rotational movement of the solar panel so it can face the sun. I will communicate using a Serial Protocol Interface (SPI) along with a stepper motor driver. To communicate with the daisy chain, I will communicate over UART to receive data from the optical sensor, allowing the stepper motor to rotate based on where the sun is facing.  The microcontroller will be powered using a 3.3V switching buck regulator and a 12V power supply to power the 12V stepper motor.</p>"},{"location":"Component%20Selection/#mcc-configuration","title":"MCC Configuration","text":"<p>I chose a 28 pin PIC as my main microcontroller as my subsystem will initially only need about 6 pins to work effectively. Two pins are designated to RX and TX pins so I can communicate to the daisy chain network. 4 pins are designated to the stepper motor driver, focusing on SCK, SDI, SDO, and SS. We have a clock, serial input, serial output, and slave select that will connect to the stepper motor driver. Other pins are free of use and can be used for debugging purposes. The other pins are used for debugging and potential layout shifts down the road</p>"},{"location":"Component%20Selection/#major-components-selection","title":"Major Components Selection","text":""},{"location":"Component%20Selection/#pic-microcontroller","title":"PIC Microcontroller","text":"<ol> <li> <p>PIC16F1503-I/SL </p> </li> <li> <p>$0.99</p> </li> <li>Link to Product</li> </ol> Pros Cons Fast Shipping Can't communicate over UART <ol> <li> <p>PIC18F27Q10-I/SO </p> </li> <li> <p>$1.45</p> </li> <li>Link to Product</li> </ol> Pros Cons Has UART and SPI compatibility small programming size (28kB) compared to 128 kB used in class Functions with MPX labs <ol> <li> <p>PIC18F14Q20T-I/SS </p> </li> <li> <p>$1.06</p> </li> <li>Link to Product</li> </ol> Pros Cons UART and SPI compatibility compatibility issues <p>Choice: Option 2 PIC18F27Q10-I/SO</p> <p>Rationale: I chose this specific microcontroller because it can communicate with UART and use an SPI to effectively control my stepper motor driver. It also has the necessary pins for the entire subsystem, leaving out extra pins for debugging purposes. It also works with MPX labs and the snap programmer. It also needs around 2.3V -5.5V to power which works perfectly with the switching regulator. The max current for GPIO pins are 50 mA and about 250 mA for the entire package. A 24kB programming memory should also get the job done.</p>"},{"location":"Component%20Selection/#motor-driver","title":"Motor Driver","text":"<ol> <li> <p>DRV8434SRGER </p> </li> <li> <p>$3.13</p> </li> <li>Link to Product</li> </ol> Pros Cons can communicate with SPI hard to solder/almost impossible <ol> <li> <p>DRV8434SPWPR </p> </li> <li> <p>$3.21</p> </li> <li>Link to Product</li> </ol> Pros Cons several half bridges bigger than other options <ol> <li> <p>DRV8889QPWPRQ1 </p> </li> <li> <p>$4.17</p> </li> <li>Link to Product</li> </ol> Pros Cons can communicate with SPI expensive option <p>Choice: Option 3 DRV8889QPWPRQ1</p> <p>Rationale: I chose option 3 because it is able to support a 5V stepper motor. It is also compatible with my PIC I chose after doing some research. Although it is the most expensive option, it also has good thermal padding and operating temperatures.</p>"},{"location":"Component%20Selection/#stepper-motor","title":"Stepper Motor","text":"<ol> <li> <p>42HS40-1704B </p> </li> <li> <p>$13.95</p> </li> <li>Link to Product</li> </ol> Pros Cons cheapest option 1.8 degree step angle <ol> <li> <p>QSH4218-51-10-049 </p> </li> <li> <p>$67.78</p> </li> <li>Link to Product</li> </ol> Pros Cons bipolar/hybrid super expensive <ol> <li> <p>42M100B1B </p> </li> <li> <p>$37.73</p> </li> <li>Link to Product</li> </ol> Pros Cons bipolar/hybrid no datasheet and hard to wire <p>Choice: Option 1 42HS40-1704B</p> <p>Rationale:  I chose option 1 because it is by far the cheapest out of all the options as stepper motors are really expensive. It also has bipolar capabilities, being able be controlled bidirectionally in response to project constraints.  </p>"},{"location":"Component%20Selection/#12v-power-supply","title":"12V Power Supply","text":"<ol> <li> <p>SWI3-5-N-MUB </p> </li> <li> <p>$4.90</p> </li> <li>Link to Product</li> </ol> Pros Cons cheapest option low current output <ol> <li> <p>QSH4218-51-10-049 </p> </li> <li> <p>$6.75</p> </li> <li>Link to Product</li> </ol> Pros Cons smallest charging block low current output <ol> <li>L6R24-120</li> </ol> <p></p> <ul> <li>$8.95</li> <li>Link to Product</li> </ul> Pros Cons high current potential most expensive option <p>Choice: Option 3 L6R24-120</p> <p>Rationale:  I chose option 3 because it supplies the highest current which will be needed for my stepper motor. I will have extra current in case of power budgetting issues.</p>"},{"location":"Component%20Selection/#33v-switching-regulator","title":"3.3V Switching Regulator","text":"<ol> <li> <p>TLV61048DBVR </p> </li> <li> <p>$0.63</p> </li> <li>Link to Product</li> </ol> Pros Cons cheapest option 6 pin configuration <ol> <li> <p>TLV61046ADBVR </p> </li> <li> <p>$1.09</p> </li> <li>Link to Product</li> </ol> Pros Cons adjustable regulator 6 pin configuration <ol> <li> <p>LM2575-3.3WU </p> </li> <li> <p>$1.75</p> </li> <li>Link to Product</li> </ol> Pros Cons buck regulator smaller input voltage range 5 pin configuration <p>Choice: Option 3 LM2575-3.3WU</p> <p>Rationale:  I decided on option 3 because it has a similar pin configuration as the 3.3V regulator we designed in class. It is also a buck regulator, having a higher efficiency than most regulators. It also can take an input of 12V which is the amount of power coming from the daisy chain network.</p>"},{"location":"Power%20Budget/","title":"Power Budget","text":"<p>The motor driver maximum current is reliant on the stepper motor I am using, thats why it adds up to 0 mA. Using a 12V 2A Power Supply, it leaves room for other components as there is plenty of excess current if I needed to switch my stepper motor or microcontroller in case of emergencies. I must take into account though that since I am using a Daisy Chain Network, I need to consider the other subsystems that are being used by my team as we are all sharing a 9-12V external power supply, meaning this is only applicable when i'm using a barrel jack.</p>"},{"location":"Schematic%20Design/","title":"Schematic Design","text":"<p>ZIP Download</p> <p>PDF Overview</p>"},{"location":"pic-table/","title":"PIC Table","text":"ESP Info Answer Help Model PIC18F27Q10-I/SO Include the entire part number (leave off any letters at the end that specify the package type) Product Page URL Product Do not paste links directly into the table.  Use a link Datasheet URL(s) Datasheet Do not paste links directly into the table.  Use a link Application Notes URL(s) Applications Do not paste links directly into the table.  Use a link Vendor link Vendor Digikey, Jameco, etc.  Do not paste links directly into the table.  Use a link Code Examples N/A url(s) for libraries on github or other sites related to the microcontroller and your planned peripherals External Resources URL(s) External Resources Search on Google and YouTube for other resources for each specific microcontroller. Unit cost $0.84 Find in the Microchip online store, or Digikey Absolute Maximum Current for entire IC 350 mA Find in the microcontroller datasheet Supply Voltage Range 2.3V-5.5V Min / Nominal / Max / Absolute Max, as found in datasheet Absolute Maximum current  (for entire IC) 250 mA as found in datasheet Maximum GPIO current  (per pin) 50 mA as found in datasheet Supports External Interrupts? Yes as found in datasheet Required Programming Hardware, Cost, URL MPXlabs, Snap Programmer found on the microcontroller's product page Works with MPLabX? Yes Required.  See Microchip Development Tools Works with Microchip Code Configurator? Yes Can be validated in MPLabX.  Screenshot required. Module # Available Needed Associated Pins (or * for any) GPIO 23 0 * ADC 23 0 * UART 4 2 RB0-RB3 SPI 8 4 RC6-RC7 I2C 4 0 * PWM 23 0 * ICSP 1 1 RE3 ... ... ... ..."},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}